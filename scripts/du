#!/bin/bash

checkIsNetworkLamp () {
  NETWORK="lamp"
  if [ ! "$(docker network ls | grep $NETWORK)" ]; 
  then
    echo "Creating lamp network..."
    docker network create lamp
  fi
}

removeRunningContainersApartMysql() {
  CONTAINERS=$(docker ps -a | grep -v "mysql" | awk 'NR>1 {print $1}')
  if [[ "$CONTAINERS" != "" ]];
  then
    echo "Removing running php container..."
    docker rm --force $CONTAINERS
  fi
  # docker rm --force $(docker ps -a | grep -v "mysql" | awk 'NR>1 {print $1}')
}

connectToNetwork () {
	NETWORK="lamp"
	#Find out the networks that the container is connected to
	CONTAINER_NETWORKS=$(docker inspect $1 --format='{{range $k,$v := .NetworkSettings.Networks}} {{$k}} {{end}}')

	#Check if the php container is already attached to the lamp network
	if [[ "$CONTAINER_NETWORKS" != *"$NETWORK"* ]];
	then
		echo "Connecting container to lamp network..."
		docker network connect lamp $1
	fi
}

startPhp () {
	cd ~/docker/php$1
	docker-compose up -d
	connectToNetwork php$1
}

startMysql () {
  cd ~/docker/mysql5.6
  docker-compose up -d
  connectToNetwork mysql
}

echoHelp () {
    echo "Options: "
    echo "db	Start mysql5.6 container and connect it to lamp network"
    echo "5.4	Start php5.4 container and connect it to lamp network"
    echo "5.6	Start php5.6 container and connect it to lamp network"
    echo "7.0	Start php7.0 container and connect it to lamp network"
    echo "7.1	Start php7.1 container and connect it to lamp network"
    echo "7.2	Start php7.2 container and connect it to lamp network"
    echo "7.4	Start php7.4 container and connect it to lamp network"
}

checkIsNetworkLamp
  if [[ "$1" = "--help" ]];
  then
    echoHelp
  elif [[ "$1" == "db" ]];
then
  echo "Starting mysql container..."
  startMysql
else
	removeRunningContainersApartMysql
	startPhp $1
fi
